{"ast":null,"code":"import axios from'axios';var baseURL='http://localhost:3001/api/persons';function create(newObject){var request=axios.post(baseURL,newObject);return request.then(function(response){return response.data;});}function retrieve(){var request=axios.get(baseURL);return request.then(function(response){return response.data;});}function remove(id){var promise=axios.delete(\"\".concat(baseURL,\"/\").concat(id));}function update(newObject,id){var request=axios.put(\"\".concat(baseURL,\"/\").concat(id),newObject);return request.then(function(response){return response.data;});}export{create,retrieve,remove,update};","map":{"version":3,"sources":["/home/the_last_crusaderr/Desktop/FullStackOpen/Part-2/phonebook-step11-12/src/services/persons.js"],"names":["axios","baseURL","create","newObject","request","post","then","response","data","retrieve","get","remove","id","promise","delete","update","put"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,GAAMC,CAAAA,OAAO,CAAG,mCAAhB,CAMG,QAASC,CAAAA,MAAT,CAAgBC,SAAhB,CAA2B,CACvB,GAAMC,CAAAA,OAAO,CAAGJ,KAAK,CAACK,IAAN,CAAWJ,OAAX,CAAoBE,SAApB,CAAhB,CACA,MAAOC,CAAAA,OAAO,CAACE,IAAR,CAAa,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAvB,EAAb,CAAP,CACH,CAGH,QAASC,CAAAA,QAAT,EAAmB,CACZ,GAAML,CAAAA,OAAO,CAAGJ,KAAK,CAACU,GAAN,CAAUT,OAAV,CAAhB,CACA,MAAOG,CAAAA,OAAO,CAACE,IAAR,CAAgB,SAACC,QAAD,QAAeA,CAAAA,QAAQ,CAACC,IAAxB,EAAhB,CAAP,CACP,CAGA,QAASG,CAAAA,MAAT,CAAiBC,EAAjB,CAAqB,CAClB,GAAMC,CAAAA,OAAO,CAAGb,KAAK,CAACc,MAAN,WAAgBb,OAAhB,aAA2BW,EAA3B,EAAhB,CACH,CAGG,QAASG,CAAAA,MAAT,CAAgBZ,SAAhB,CAA0BS,EAA1B,CAA6B,CACzB,GAAMR,CAAAA,OAAO,CAAGJ,KAAK,CAACgB,GAAN,WAAcf,OAAd,aAAyBW,EAAzB,EAA8BT,SAA9B,CAAhB,CACA,MAAOC,CAAAA,OAAO,CAACE,IAAR,CAAc,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAb,EAAtB,CAAP,CACH,CAIL,OACIN,MADJ,CAEIO,QAFJ,CAGIE,MAHJ,CAIII,MAJJ","sourcesContent":["import axios from 'axios'\nconst baseURL = 'http://localhost:3001/api/persons'      \n\n\n\n\n\n   function create(newObject) {\n       const request = axios.post(baseURL, newObject)\n       return request.then((response) => response.data)\n   }\n\n\n function retrieve(){\n        const request = axios.get(baseURL)\n        return request.then (  (response)  => response.data)\n}\n\n\n function remove (id) {\n    const promise = axios.delete(`${baseURL}/${id}`)\n}\n\n\n    function update(newObject,id){\n        const request = axios.put( `${baseURL}/${id}`,newObject)\n        return request.then( response => response.data   )\n    }\n\n\n\nexport {\n    create,\n    retrieve,\n    remove,\n    update\n}\n"]},"metadata":{},"sourceType":"module"}