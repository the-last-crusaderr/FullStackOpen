{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseURL","retrieve","axios","get","then","response","data","Notification","message","className","Displayer","searchString","persons","searchResult","setPersons","handleDelete","person","id","window","confirm","name","delete","initialData","map","number","onClick","search","App","useState","newName","setNewName","newNum","setNewNum","setSearchString","setSearchResult","notif","setNotif","useEffect","onSubmit","event","preventDefault","nameObject","date","Date","length","console","log","target","undefined","find","newObject","post","oldId","put","update","searchArray","filter","toLowerCase","value","onChange","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7262451.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseURL = '/api/persons'      \n\n\n\n\n\n   function create(newObject) {\n       const request = axios.post(baseURL, newObject)\n       return request.then((response) => response.data)\n   }\n\n\n function retrieve(){\n        const request = axios.get(baseURL)\n        return request.then (  (response)  => response.data)\n}\n\n\n function remove (id) {\n    const promise = axios.delete(`${baseURL}/${id}`)\n}\n\n\n    function update(newObject,id){\n        const request = axios.put( `${baseURL}/${id}`,newObject)\n        return request.then( response => response.data   )\n    }\n\n\n\nexport {\n    create,\n    retrieve,\n    remove,\n    update\n}\n","import React, { useState, useEffect} from \"react\";\nimport axios from 'axios'\nimport {retrieve,remove,create,update} from './services/persons'\n\n\n\n\n\nconst Notification = ({message}) => {\n  if(message === null)\n    return null\n\n  return (\n      <div className='coloring'>\n        {message}\n      </div>\n  )\n\n\n}\n\n\n\nconst Displayer = ({ searchString, persons, searchResult,setPersons }) => {\n\n  function handleDelete(person){\n      let result = window.confirm(`Do you want to delete ${person.name}`)\n      if (result === true) {\n        remove(person.id)\n        retrieve().then( (initialData) => setPersons(initialData)  )\n      }\n  }\n\n\n\n  if (searchString === \"\") {\n    return (\n      <>\n        <ul>\n          {persons.map((person) => (\n            <li key={person.name}>\n              {\" \"}\n              {person.name} {person.number}\n              <button onClick={() => handleDelete(person)}> Delete </button>\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <ul>\n          {searchResult.map((search) => (\n            <li key={search.name}>\n              {\" \"}\n              {search.name} {search.number}\n              <button onClick={() => handleDelete(search)}> Delete </button>\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n};\n\n\n\nconst App = () => {\n    \n    \n    \n    \n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNum, setNewNum] = useState(\"\");\n  const [searchString, setSearchString] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [notif,setNotif] = useState(null)\n  \n  \n  \n  \n  // using the useEffect for fetching the data from server and setting it to the component after first rendering..\n    \n    useEffect( () => {\n        retrieve().then( (initialData) => setPersons(initialData)  )\n      }\n  , [])\n\n    \n    \n\n  function addName(event) {\n    //if trying to add the people in the phonebook\n    if (searchString === \"\") {\n      event.preventDefault();\n      const nameObject = {\n        name: newName,\n        number: newNum,\n        date: new Date(),\n        id: persons.length + 1\n      };\n\n      console.log(\"button clicked\", event.target);\n      if (persons.find((person) => person.name === nameObject.name) === undefined) {\n        const newData = create(nameObject).then( (person) => setNotif( `${person.name} is added` ) )\n        retrieve().then( (initialData) => setPersons(initialData) )\n        //setPersons(persons.concat(nameObject));\n      }\n      else {\n          let result = window.confirm(`${nameObject.name}is already added to phonebook,replace the old number with new one`)\n          if(result === true) {\n            let oldPerson = persons.find((person) => person.name === nameObject.name)\n            let oldId = oldPerson.id\n            nameObject.id = oldId\n            update(nameObject,oldId)\n            retrieve().then((initialData) => setPersons(initialData))\n          }\n      }\n    }\n\n    //if searching on the phonebook\n    else {\n      event.preventDefault();\n      const searchArray = persons.filter(\n        (person) => person.name.toLowerCase().search(searchString.toLowerCase()) !== -1\n      );\n\n      setSearchResult(searchArray);\n    }\n  }\n\n  function handleNewName(event) {\n    setNewName(event.target.value);\n  }\n\n  function handleNewNum(event) {\n    setNewNum(event.target.value);\n  }\n\n  function handlesetSearchString(event) {\n    setSearchString(event.target.value);\n  }\n\n  return (\n    <div>\n      <Notification message={notif}/>\n      <h2>Phonebook</h2>\n      <form onSubmit={addName}>\n        filter shown with\n        <input value={searchString} onChange={handlesetSearchString} />\n        <h2>add a new</h2>\n        <div>\n          name: <input value={newName} onChange={handleNewName} />\n        </div>\n        number: <input value={newNum} onChange={handleNewNum} />\n        <br />\n        <button type=\"submit\">add</button>\n      </form>\n\n      <Displayer\n        searchString={searchString}\n        persons={persons}\n        searchResult={searchResult}\n        setPersons = {setPersons}\n      />\n    </div>\n  );\n};\n\nexport default App; \n","import './index.css'\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}